===>> resource main.tf   <<===


resource "aws_vpc" "new" {
  cidr_block       = var.cidr_vpc
  instance_tenancy = "default"
 #tags = var.tag
#tags = merge(var.tag, {"Name"="cloud-vpc-${var.env}-${var.app}-demo"})
tags = merge(var.tag, {"Name"= format("vpc-%s-%s-%s", var.env,var.app,"aniket")})
}


resource "aws_subnet" "public_subnet" {
  count = length(var.cidr_pub_subnet)
  vpc_id     = aws_vpc.new.id
  cidr_block = var.cidr_pub_subnet[count.index]
map_public_ip_on_launch = true
availability_zone = element(var.az_subnet, count.index)
   #tags = merge(var.tag, {"Name"="public-subnet-${var.env}-${var.app}-${element(var.az_subnet, count.index)}"})
tags = merge(var.tag, {"Name"= format("public-subnet-%s-%s-%s-%s", var.env,var.app,element(var.az_subnet, count.index),"aniket_sir")})
  }

resource "aws_subnet" "private_subnet" {
  count = length(var.cidr_pri_subnet)
  vpc_id     = aws_vpc.new.id
  cidr_block = var.cidr_pri_subnet[count.index]
#map_public_ip_on_launch = true
availability_zone = element(var.az_subnet, count.index)
tags = merge(var.tag, {"Name"= format("private-subnet-%s-%s-%s-%s", var.env,var.app,element(var.az_subnet, count.index),"aniket_sir")})
  }

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.new.id

  tags = {
    Name = "dev_igw"
  }
}


===>> resource var.tf   <<===

variable "cidr_vpc" {
  type = string
}
variable "cidr_pub_subnet" {
  type = list
}
variable "cidr_pri_subnet" {
  type = list
}
# variable "az_pub_subnet" {
#   type = string
# }
variable "az_subnet" {
  type = list
}
variable "tag" {
  type = map(string)
  default = {}
}

variable "env" {
  type = string
}

variable "app" {
  type = string
}



===>> environment main.tf   <<===

provider "aws" {
  region     = "ap-northeast-1"
  profile = "cloud"
}

module "vpc" {
  source = "../../resources/vpc"
env = "prod"
app = "java"
cidr_vpc = "9.0.0.0/16"
cidr_pub_subnet = ["9.0.1.0/24","9.0.2.0/24","9.0.3.0/24"]
                #     0            1                2
cidr_pri_subnet = ["9.0.4.0/24","9.0.5.0/24","9.0.6.0/24"]
#az_subnet = "ap-northeast-1a"
az_subnet = ["ap-northeast-1a","ap-northeast-1c","ap-northeast-1d"]
  tag = {
    Project = "cloudblitz"
  }
}

terraform {
  backend "s3" {
    bucket                  = "cloudblitz-terraform-s3-state"
    key                     = "terraform-project-1"
    region                  = "ap-northeast-1"
    shared_credentials_file = "~/.aws/credentials"
  }
}
